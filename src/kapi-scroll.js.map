{"version":3,"sources":["kapi-scroll.coffee"],"names":[],"mappings":"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","file":"kapi-scroll.js","sourceRoot":"/source/","sourcesContent":["  if (typeof define == 'function' && define.amd)\n    # When using rekapi with requirejs, you must handle the dependencies yourself, because\n    # here we assume that if require is being used then rekapi has already been loaded in\n    Rekapi = window.Rekapi or require('rekapi')\n\n    # If any other deps are being loaded in without being exposed in the global namespace,\n    # the same as above applies\n    _ = window._ or (if require.defined('lodash') then require('lodash') else require('underscore'))\n    AnimationFrame = window.AnimationFrame or (if require.defined('animationFrame') then require('animationFrame') else require('AnimationFrame'))\n\n  angular.module('gilbox.kapiScroll', [])\n    .factory 'rekapi', ($document) -> new Rekapi($document[0].body)\n    .directive 'kapiScroll', (rekapi, $window) ->\n      (scope, element, attr) ->\n        actor = rekapi.addActor({ context: element[0] })\n        y = 0\n        prevScrollY = 0\n        scrollY = 0\n        animationFrame = new AnimationFrame()\n        updating = false\n\n        actionProps = {\n\n          # When the up, down fns are called, `this` is the current keyFrame object\n\n          # fn reference that is called when scrolled up past keyframe\n          'onUp':\n            up: -> @onUp(@, 'onUp')\n\n          # fn reference that is called when scrolled down past keyframe\n          'onDown':\n            down: -> @onDown(@, 'onDown')\n\n          # class(es) added when scrolled down past keyframe,\n          'downAddClass':\n            down: -> element.addClass(@downAddClass)\n\n          # class(es) added when scrolled up past keyframe,\n          'upAddClass':\n            up: -> element.addClass(@upAddClass)\n\n          # class(es) removed when scrolled down past keyframe\n          'downRemoveClass':\n            down: -> element.removeClass(@downRemoveClass)\n\n          # class(es) removed when scrolled up past keyframe\n          'upRemoveClass':\n            up: -> element.removeClass(@upRemoveClass)\n\n        }\n        actionPropKeys = _.keys(actionProps)\n        actions = {}\n        actionFrames = []\n        actionFrameIdx = -1\n\n        actionsUpdate = ->\n\n          d = scrollY - prevScrollY\n\n          if d<0 and actionFrameIdx >= 0  # scroll up: don't apply on page load (only apply on page load for downward movement)\n            idx = if (actionFrameIdx >= actionFrames.length) then actionFrameIdx-1 else actionFrameIdx\n            while (idx >= 0 and y < actionFrames[idx])\n              c = actions[actionFrames[idx]]\n\n              for prop of c\n                actionProp = actionProps[prop]\n                actionProp.up.apply(c) if actionProp.up\n\n              actionFrameIdx = --idx\n\n          if d>=0 and actionFrameIdx < actionFrames.length  # scroll down: will apply on page load\n            idx = if (actionFrameIdx < 0) then 0 else actionFrameIdx\n            while (idx < actionFrames.length and y > actionFrames[idx])\n              c = actions[actionFrames[idx]]\n\n              for prop of c\n                actionProp = actionProps[prop]\n                actionProp.down.apply(c) if actionProp.down\n\n              actionFrameIdx = ++idx\n\n          prevScrollY = scrollY\n\n\n        actionsUpdate = _.debounce(actionsUpdate, 66, {leading: true, maxWait: 66})\n\n\n        update = ->\n          d = scrollY - y\n          ad = Math.abs(d)\n          if ad < 1.5\n            updating = false\n            y = scrollY\n            rekapi.update(y)\n          else\n            updating = true\n            y += if ad>8 then d*0.25 else (if d > 0 then 1 else -1) # ease the scroll\n            rekapi.update(parseInt(y))\n            animationFrame.request(update)\n\n\n        # automatic conversion from camelCase to dashed-case\n        dashersize = (str) ->\n          str.replace(/\\W+/g, '-').replace(/([a-z\\d])([A-Z])/g, '$1-$2')\n\n\n        ksWatchCancel = scope.$watch attr.kapiScroll, (data) ->\n          return unless data\n\n          # useful in angular < v1.3 where one-time binding isn't available\n          if attr.kapiScrollBindOnce? then ksWatchCancel()\n\n          # element ease property\n          elmEase = data.ease || 'linear';\n          delete data.ease\n\n          actions = {}\n          actionFrames = []\n\n          # setup the rekapi keyframes\n          for scrollY, keyFrame of data\n\n            actionCount = 0\n\n            # custom actions not supported by rekapi\n            for actionProp in actionPropKeys\n              if keyFrame[actionProp]\n                actionCount++\n                actions[scrollY] or= {}\n                actions[scrollY][actionProp] = keyFrame[actionProp]\n                delete keyFrame[actionProp]\n\n            actionFrames.push(parseInt(scrollY)) if actionCount\n\n            # keyframe ease property\n            # (will override or fallback to element ease property)\n            ease = {}\n            kfEase = elmEase\n            if keyFrame.ease?\n              if angular.isObject(keyFrame.ease)\n                ease = keyFrame.ease\n              else\n                kfEase = keyFrame.ease\n              delete keyFrame.ease\n\n            # comprehension of array-notation for easing\n            # (will override or fall back to keyframe ease propery as needed)\n            for prop, val of keyFrame\n              prop = dashersize(prop)\n              val = [val, kfEase] if not angular.isArray(val)\n              o = {}\n              o[prop] = val[1]\n              angular.extend(ease, o)\n              keyFrame[prop] = val[0]\n\n            actor.keyframe(scrollY, keyFrame, ease)\n\n          actionFrames.sort (a,b) -> a > b\n\n          y = prevScrollY = scrollY = $window.scrollY\n          update()\n          actionsUpdate()\n        , true  # deep watch\n\n        # respond to scroll event\n        angular.element($window).on 'scroll', ->\n          scrollY = $window.scrollY\n          actionsUpdate()\n          update() if !updating # debounced update\n\n        scope.$on '$destroy', ->\n          rekapi.removeActor(actor)\n          angular.element($window).off 'scroll'"]}